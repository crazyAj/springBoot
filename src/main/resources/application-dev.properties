#--------- \u914D\u7F6E Servlet & Tomcat ---------#
# \u5B9A\u4E49port
#server.port=8443
server.port=8888

# \u5B9A\u4E49context-path
server.servlet.context-path=/spring-boot

# \u5B9A\u4E49session-timeout(\u79D2)
#server.servlet.session.timeout=1800
# \u914D\u7F6ETomcat\u7F16\u7801\uFF0C\u9ED8\u8BA4UTF-8
#server.tomcat.uri-encoding=UTF-8


#--------- \u63CF\u8FF0\u4FE1\u606F ---------#
my.app.name=SpringBoot Demo
my.app.version=1.0.0
my.app.api.basePackage=com.example.demo.api
my.app.contact.name=crazyAJ
my.app.contact.url=https://github.com/crazyAj/springBoot
my.app.contact.email=389130663@qq.com


#--------- \u914D\u7F6E SSL ---------#
#server.ssl.key-alias=thread
#server.ssl.key-store=classpath:cer/ssl/.keystore
#server.ssl.key-store-password=123456
#server.ssl.key-store-type=JKS


#--------- logback ---------#
logging.config=classpath:logback/logback-dev.xml
log_home=C:\\logs
log_name=spring-boot
log_level=info


#--------- JSON \u65F6\u533A\u8BBE\u7F6E ---------#
spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
spring.jackson.time-zone=GMT+8


#--------- JNDI ---------#
#spring.datasource.jndi-name=java:comp/env/jdbc/TkPayDB8


#--------- datasource-druid (master) ---------#
spring.datasource.atomikos.master.xa-data-source-class-name=com.alibaba.druid.pool.xa.DruidXADataSource
spring.datasource.atomikos.master.unique-resource-name=master
spring.datasource.atomikos.master.max-pool-size=10
spring.datasource.atomikos.master.min-pool-size=2
spring.datasource.atomikos.master.max-idle-time=60
spring.datasource.atomikos.master.max-lifetime=1200
spring.datasource.atomikos.master.test-query=SELECT '1'
# \u5B9A\u65F6\u7EF4\u62A4\u7EBF\u7A0B\u5468\u671F \u5355\u4F4D\u79D2
spring.datasource.atomikos.master.maintenance-interval=60

spring.datasource.atomikos.master.xa-properties.dbType=mysql
spring.datasource.atomikos.master.xa-properties.url=jdbc:mysql://127.0.0.1:3306/master?charset=utf8mb4&useUnicode=true&characterEncoding=utf8&useSSL=false&autoReconnect=true&serverTimezone=UTC
spring.datasource.atomikos.master.xa-properties.driverClassName=com.mysql.cj.jdbc.Driver
spring.datasource.atomikos.master.xa-properties.username=root
spring.datasource.atomikos.master.xa-properties.password=root
spring.datasource.atomikos.master.xa-properties.initialSize=5
spring.datasource.atomikos.master.xa-properties.minIdle=5
spring.datasource.atomikos.master.xa-properties.maxActive=20
# \u83B7\u53D6\u8FDE\u63A5\u7B49\u5F85\u8D85\u65F6\u65F6\u95F4
spring.datasource.atomikos.master.xa-properties.maxWait=60000
# \u95F4\u9694\u591A\u4E45\u8FDB\u884C\u4E00\u6B21\u68C0\u6D4B\uFF0C\u68C0\u6D4B\u9700\u8981\u5173\u95ED\u7684\u7A7A\u95F2\u8FDE\u63A5
spring.datasource.atomikos.master.xa-properties.timeBetweenEvictionRunsMillis=60000
# \u4E00\u4E2A\u8FDE\u63A5\u5728\u6C60\u4E2D\u6700\u5C0F\u751F\u5B58\u7684\u65F6\u95F4
spring.datasource.atomikos.master.xa-properties.minEvictableIdleTimeMillis=300000
# \u9A8C\u8BC1\u8FDE\u63A5\u7684\u6709\u6548\u6027
spring.datasource.atomikos.master.xa-properties.testWhileIdle=true
# \u6307\u5B9A\u83B7\u53D6\u8FDE\u63A5\u65F6\u8FDE\u63A5\u6821\u9A8C\u7684sql\u67E5\u8BE2\u8BED\u53E5
spring.datasource.atomikos.master.xa-properties.validationQuery=SELECT '1'
# \u83B7\u53D6\u8FDE\u63A5\u65F6\u5019\u9A8C\u8BC1
spring.datasource.atomikos.master.xa-properties.testOnBorrow=false
# \u8FD4\u8FD8\u8FDE\u63A5\u65F6\u5019\u9A8C\u8BC1
spring.datasource.atomikos.master.xa-properties.testOnReturn=false
# \u6253\u5F00PSCache\uFF0C\u5E76\u6307\u5B9A\u6BCF\u4E2A\u8FDE\u63A5\u4E0APSCache\u7684\u5927\u5C0F\u3002oracle\u8BBE\u4E3Atrue\uFF0Cmysql\u8BBE\u4E3Afalse\u3002\u5206\u5E93\u5206\u8868\u8F83\u591A\u63A8\u8350\u8BBE\u7F6E\u4E3Afalse
spring.datasource.atomikos.master.xa-properties.poolPreparedStatements=false
spring.datasource.atomikos.master.xa-properties.maxPoolPreparedStatementPerConnectionSize=20
# \u914D\u7F6E\u76D1\u63A7\u7EDF\u8BA1\u62E6\u622A\u7684filters\uFF0C\u53BB\u6389\u540E\u76D1\u63A7\u754C\u9762sql\u65E0\u6CD5\u7EDF\u8BA1\uFF0C'wall'\u7528\u4E8E\u9632\u706B\u5899
spring.datasource.atomikos.master.xa-properties.filters=stat,wall,log4j


#--------- datasource-druid2 (slave) ---------#
spring.datasource.atomikos.slave.xa-data-source-class-name=com.alibaba.druid.pool.xa.DruidXADataSource
spring.datasource.atomikos.slave.unique-resource-name=slave
spring.datasource.atomikos.slave.max-pool-size=10
spring.datasource.atomikos.slave.min-pool-size=2
spring.datasource.atomikos.slave.max-idle-time=60
spring.datasource.atomikos.slave.max-lifetime=1200
spring.datasource.atomikos.slave.test-query=SELECT '1'
# \u5B9A\u65F6\u7EF4\u62A4\u7EBF\u7A0B\u5468\u671F \u5355\u4F4D\u79D2
spring.datasource.atomikos.slave.maintenance-interval=60

spring.datasource.atomikos.slave.xa-properties.dbType=mysql
spring.datasource.atomikos.slave.xa-properties.url=jdbc:mysql://127.0.0.1:3306/slave?charset=utf8mb4&useUnicode=true&characterEncoding=utf8&useSSL=false&autoReconnect=true&&serverTimezone=UTC
spring.datasource.atomikos.slave.xa-properties.driverClassName=com.mysql.cj.jdbc.Driver
spring.datasource.atomikos.slave.xa-properties.username=root
spring.datasource.atomikos.slave.xa-properties.password=root
spring.datasource.atomikos.slave.xa-properties.initialSize=5
spring.datasource.atomikos.slave.xa-properties.minIdle=5
spring.datasource.atomikos.slave.xa-properties.maxActive=20
# \u83B7\u53D6\u8FDE\u63A5\u7B49\u5F85\u8D85\u65F6\u65F6\u95F4
spring.datasource.atomikos.slave.xa-properties.maxWait=60000
# \u95F4\u9694\u591A\u4E45\u8FDB\u884C\u4E00\u6B21\u68C0\u6D4B\uFF0C\u68C0\u6D4B\u9700\u8981\u5173\u95ED\u7684\u7A7A\u95F2\u8FDE\u63A5
spring.datasource.atomikos.slave.xa-properties.timeBetweenEvictionRunsMillis=60000
# \u4E00\u4E2A\u8FDE\u63A5\u5728\u6C60\u4E2D\u6700\u5C0F\u751F\u5B58\u7684\u65F6\u95F4
spring.datasource.atomikos.slave.xa-properties.minEvictableIdleTimeMillis=300000
# \u9A8C\u8BC1\u8FDE\u63A5\u7684\u6709\u6548\u6027
spring.datasource.atomikos.slave.xa-properties.testWhileIdle=true
# \u6307\u5B9A\u83B7\u53D6\u8FDE\u63A5\u65F6\u8FDE\u63A5\u6821\u9A8C\u7684sql\u67E5\u8BE2\u8BED\u53E5
spring.datasource.atomikos.slave.xa-properties.validationQuery=SELECT '1'
# \u83B7\u53D6\u8FDE\u63A5\u65F6\u5019\u9A8C\u8BC1
spring.datasource.atomikos.slave.xa-properties.testOnBorrow=false
# \u8FD4\u8FD8\u8FDE\u63A5\u65F6\u5019\u9A8C\u8BC1
spring.datasource.atomikos.slave.xa-properties.testOnReturn=false
# \u6253\u5F00PSCache\uFF0C\u5E76\u6307\u5B9A\u6BCF\u4E2A\u8FDE\u63A5\u4E0APSCache\u7684\u5927\u5C0F\u3002oracle\u8BBE\u4E3Atrue\uFF0Cmysql\u8BBE\u4E3Afalse\u3002\u5206\u5E93\u5206\u8868\u8F83\u591A\u63A8\u8350\u8BBE\u7F6E\u4E3Afalse
spring.datasource.atomikos.slave.xa-properties.poolPreparedStatements=false
spring.datasource.atomikos.slave.xa-properties.maxPoolPreparedStatementPerConnectionSize=20
# \u914D\u7F6E\u76D1\u63A7\u7EDF\u8BA1\u62E6\u622A\u7684filters\uFF0C\u53BB\u6389\u540E\u76D1\u63A7\u754C\u9762sql\u65E0\u6CD5\u7EDF\u8BA1\uFF0C'wall'\u7528\u4E8E\u9632\u706B\u5899
spring.datasource.atomikos.slave.xa-properties.filters=stat,wall,log4j


#--------- jta \u4E8B\u52A1 ---------#
spring.jta.atomikos.properties.log-base-dir=../logs
# \u9ED8\u8BA4\u53D6\u8BA1\u7B97\u673A\u7684IP\u5730\u5740 \u9700\u4FDD\u8BC1\u751F\u4EA7\u73AF\u5883\u503C\u552F\u4E00
spring.jta.transaction-manager-id=txManager


#--------- redis ---------#
spring.redis.database=0
spring.redis.host=127.0.0.1
spring.redis.port=6379
spring.redis.password=
spring.redis.timeout=5000
spring.redis.jedis.pool.max-active=100
spring.redis.jedis.pool.max-wait=-1
spring.redis.jedis.pool.max-idle=20
spring.redis.jedis.pool.min-idle=5
spring.redis.mq.topic=topic-key-message-queue


#--------- rabbitmq ---------#
spring.rabbitmq.first.virtual-host=/
spring.rabbitmq.first.host=192.168.11.164
spring.rabbitmq.first.port=5672
spring.rabbitmq.first.username=aj
spring.rabbitmq.first.password=qwer

spring.rabbitmq.second.virtual-host=/
spring.rabbitmq.second.host=192.168.11.166
spring.rabbitmq.second.port=5673
spring.rabbitmq.second.username=aj
spring.rabbitmq.second.password=qwer

# \u624B\u52A8ack
#spring.rabbitmq.listener.simple.acknowledge-mode=manual

# self-define rabbit params
rabbitmq.exchange.first.exchange=topic.first.exchange
rabbitmq.queue.first.routing-key=topic.first.routingKey
rabbitmq.queue.first.key-name=topic.first.queue

rabbitmq.exchange.second.exchange=topic.second.exchange
rabbitmq.queue.second.routing-key=topic.second.routingKey
rabbitmq.queue.second.key-name=topic.second.queue



#--------- self-define params ---------#
first.name=aj
person.home=D:/